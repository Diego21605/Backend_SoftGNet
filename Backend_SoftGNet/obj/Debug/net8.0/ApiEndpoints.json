[
  {
    "ContainingType": "Backend_SoftGNet.Controllers.AuthenticationController",
    "Method": "Login",
    "RelativePath": "api/Authentication/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "Backend_SoftGNet.Services.Login",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.DriversController",
    "Method": "GetDrivers",
    "RelativePath": "api/Drivers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Backend_SoftGNet.Models.Drivers, Backend_SoftGNet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.DriversController",
    "Method": "PostDrivers",
    "RelativePath": "api/Drivers",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "drivers",
        "Type": "Backend_SoftGNet.Models.Drivers",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend_SoftGNet.Models.Drivers",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.DriversController",
    "Method": "GetDrivers",
    "RelativePath": "api/Drivers/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend_SoftGNet.Models.Drivers",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.DriversController",
    "Method": "PutDrivers",
    "RelativePath": "api/Drivers/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "drivers",
        "Type": "Backend_SoftGNet.Models.Drivers",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.DriversController",
    "Method": "DeleteDrivers",
    "RelativePath": "api/Drivers/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.RoutesVehiclesController",
    "Method": "GetRoute",
    "RelativePath": "api/RoutesVehicles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Backend_SoftGNet.Models.Routes, Backend_SoftGNet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.RoutesVehiclesController",
    "Method": "PostRoutes",
    "RelativePath": "api/RoutesVehicles",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "routes",
        "Type": "Backend_SoftGNet.Models.Routes",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend_SoftGNet.Models.Routes",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.RoutesVehiclesController",
    "Method": "GetRoutes",
    "RelativePath": "api/RoutesVehicles/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend_SoftGNet.Models.Routes",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.RoutesVehiclesController",
    "Method": "PutRoutes",
    "RelativePath": "api/RoutesVehicles/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "routes",
        "Type": "Backend_SoftGNet.Models.Routes",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.RoutesVehiclesController",
    "Method": "DeleteRoutes",
    "RelativePath": "api/RoutesVehicles/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.RoutesVehiclesController",
    "Method": "GetRoutes",
    "RelativePath": "api/RoutesVehicles/getRoutes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.SchedulesController",
    "Method": "GetSchedules",
    "RelativePath": "api/Schedules",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Backend_SoftGNet.Models.Schedules, Backend_SoftGNet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.SchedulesController",
    "Method": "PostSchedules",
    "RelativePath": "api/Schedules",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "schedules",
        "Type": "Backend_SoftGNet.Models.Schedules",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend_SoftGNet.Models.Schedules",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.SchedulesController",
    "Method": "GetSchedules",
    "RelativePath": "api/Schedules/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend_SoftGNet.Models.Schedules",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.SchedulesController",
    "Method": "PutSchedules",
    "RelativePath": "api/Schedules/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "schedules",
        "Type": "Backend_SoftGNet.Models.Schedules",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.SchedulesController",
    "Method": "DeleteSchedules",
    "RelativePath": "api/Schedules/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.SchedulesController",
    "Method": "GetSchedulers",
    "RelativePath": "api/Schedules/getSchedulers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.UsersController",
    "Method": "GetUsers",
    "RelativePath": "api/Users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Backend_SoftGNet.Models.Users, Backend_SoftGNet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.UsersController",
    "Method": "PostUsers",
    "RelativePath": "api/Users",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "users",
        "Type": "Backend_SoftGNet.Models.Users",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend_SoftGNet.Models.Users",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.UsersController",
    "Method": "GetUsers",
    "RelativePath": "api/Users/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend_SoftGNet.Models.Users",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.UsersController",
    "Method": "PutUsers",
    "RelativePath": "api/Users/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "users",
        "Type": "Backend_SoftGNet.Models.Users",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.UsersController",
    "Method": "DeleteUsers",
    "RelativePath": "api/Users/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.VehiclesController",
    "Method": "GetVehicles",
    "RelativePath": "api/Vehicles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Backend_SoftGNet.Models.Vehicles, Backend_SoftGNet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.VehiclesController",
    "Method": "PostVehicles",
    "RelativePath": "api/Vehicles",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vehicles",
        "Type": "Backend_SoftGNet.Models.Vehicles",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend_SoftGNet.Models.Vehicles",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.VehiclesController",
    "Method": "GetVehicles",
    "RelativePath": "api/Vehicles/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend_SoftGNet.Models.Vehicles",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.VehiclesController",
    "Method": "PutVehicles",
    "RelativePath": "api/Vehicles/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "vehicles",
        "Type": "Backend_SoftGNet.Models.Vehicles",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.VehiclesController",
    "Method": "DeleteVehicles",
    "RelativePath": "api/Vehicles/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend_SoftGNet.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Backend_SoftGNet.WeatherForecast, Backend_SoftGNet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]